<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luka.r18.mappers.UserMapper">

    <resultMap type="com.luka.r18.entity.UserEntity" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="uuid" column="uuid" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="info" column="info" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="profilePhoto" column="profile_photo" jdbcType="VARCHAR"/>
        <result property="sexType" column="sex_type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.luka.r18.entity.response_object.UserInfo" id="UserInfoMap">
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="info" column="info" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="profilePhoto" column="profile_photo" jdbcType="VARCHAR"/>
        <result property="sexType" column="sex_type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询用户信息-->
    <select id="selectUserInfoByName" resultMap="UserInfoMap">
        select
        email, info, username, profile_photo, sex_type, create_time
        from user
        where username = #{username}
      </select>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, uuid, salt, email, info, username, password, profile_photo, sex_type, create_time
        from user
        where id = #{id}
    </select>

    <!--通过用户名查询-->
    <select id="selectUserByName" resultMap="UserMap">
        select
          id, uuid, salt, email, info, username, password, profile_photo, sex_type, create_time
        from user
        where username = #{username}
    </select>

    <!--通过用户名查询-->
    <select id="selectUserByUuid" resultMap="UserMap">
        select
            id, uuid, salt, email, info, username, password, profile_photo, sex_type, create_time
        from user
        where uuid = #{uuid}
    </select>

    <!--是否已存在的邮箱和用户名-->
    <select id="haveNameOrEMali" resultType="Integer">
        select count(*)
        from user
        where username = #{username} or email = #{email};
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
        id, uuid, salt, email, info, username, password, profile_photo, sex_type, create_time
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uuid != null and uuid != ''">
                and uuid = #{uuid}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="info != null and info != ''">
                and info = #{info}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="profilePhoto != null and profilePhoto != ''">
                and profile_photo = #{profilePhoto}
            </if>
            <if test="sexType != null">
                and sex_type = #{sexType}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="uuid != null and uuid != ''">
                and uuid = #{uuid}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="info != null and info != ''">
                and info = #{info}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="profilePhoto != null and profilePhoto != ''">
                and profile_photo = #{profilePhoto}
            </if>
            <if test="sexType != null">
                and sex_type = #{sexType}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(uuid, salt, email, info, username, password, profile_photo, sex_type, create_time)
        values (#{uuid}, #{salt}, #{email}, #{info}, #{username}, #{password}, #{profilePhoto}, #{sexType}, #{createTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(uuid, salt, email, info, username, password, profile_photo, sex_type,
        create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uuid}, #{entity.salt}, #{entity.email}, #{entity.info},
            #{entity.username}, #{entity.password}, #{entity.profilePhoto}, #{entity.sexType}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(uuid, salt, email, info, username, password, profile_photo, sex_type,
        create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.uuid}, #{entity.salt}, #{entity.email}, #{entity.info},
            #{entity.username}, #{entity.password}, #{entity.profilePhoto}, #{entity.sexType}, #{entity.createTime})
        </foreach>
        on duplicate key update
        uuid = values(uuid),
        salt = values(salt),
        email = values(email),
        info = values(info),
        username = values(username),
        password = values(password),
        profile_photo = values(profile_photo),
        sex_type = values(sex_type),
        create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="uuid != null and uuid != ''">
                uuid = #{uuid},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="info != null and info != ''">
                info = #{info},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="profilePhoto != null and profilePhoto != ''">
                profile_photo = #{profilePhoto},
            </if>
            <if test="sexType != null">
                sex_type = #{sexType},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>

</mapper>

